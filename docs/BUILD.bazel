load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")

_DOC_SRCS = {
    "//extras:embed_data": ["extras.md", "rule_subsection.vm"],
    "//go:mode_docs": ["modes.md", "rule_body.vm"],
    "//go:core_docs": ["core.md", "rule_subsection.vm"],
}

[
    stardoc(
        name = out[0].replace(".md", "_docgen"),
        out = out[0],
        input = input + ".bzl",
        deps = [input],
        rule_template = out[1]
    )
    for [
        input,
        out,
    ] in _DOC_SRCS.items()
]

[
    diff_test(
        name = "check_" + out[0],
        failure_message = "Please run \"bazel run //docs:update\"",
        # Source file
        file1 = "//go:" + out[0],
        # Output from stardoc rule above
        file2 = out[0],
    )
    for out in _DOC_SRCS.values()
]

write_file(
    name = "gen_update",
    out = "update.sh",
    content = [
        "#!/bin/sh",
        "cd $BUILD_WORKSPACE_DIRECTORY",
    ] + [
        "cp -fv bazel-bin/docs/{0} go/{0}".format(out[0])
        for out in _DOC_SRCS.values()
    ],
)

sh_binary(
    name = "update",
    srcs = ["update.sh"],
    data = [out[0] for out in _DOC_SRCS.values()],
)
